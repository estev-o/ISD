/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package es.udc.ws.app.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2025-01-24")
public class ThriftEnrollmentDto implements org.apache.thrift.TBase<ThriftEnrollmentDto, ThriftEnrollmentDto._Fields>, java.io.Serializable, Cloneable, Comparable<ThriftEnrollmentDto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftEnrollmentDto");

  private static final org.apache.thrift.protocol.TField ENROLLMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("enrollmentId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField USER_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("userEmail", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CREDIT_CARD_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("creditCardNumber", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CANCELLATION_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("cancellationDate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField COURSE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("courseId", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField ENROLLMENT_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("enrollmentDate", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThriftEnrollmentDtoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThriftEnrollmentDtoTupleSchemeFactory();

  public long enrollmentId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String userEmail; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String creditCardNumber; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String cancellationDate; // required
  public long courseId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String enrollmentDate; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ENROLLMENT_ID((short)1, "enrollmentId"),
    USER_EMAIL((short)2, "userEmail"),
    CREDIT_CARD_NUMBER((short)3, "creditCardNumber"),
    CANCELLATION_DATE((short)4, "cancellationDate"),
    COURSE_ID((short)5, "courseId"),
    ENROLLMENT_DATE((short)6, "enrollmentDate");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ENROLLMENT_ID
          return ENROLLMENT_ID;
        case 2: // USER_EMAIL
          return USER_EMAIL;
        case 3: // CREDIT_CARD_NUMBER
          return CREDIT_CARD_NUMBER;
        case 4: // CANCELLATION_DATE
          return CANCELLATION_DATE;
        case 5: // COURSE_ID
          return COURSE_ID;
        case 6: // ENROLLMENT_DATE
          return ENROLLMENT_DATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ENROLLMENTID_ISSET_ID = 0;
  private static final int __COURSEID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ENROLLMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("enrollmentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("userEmail", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREDIT_CARD_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("creditCardNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CANCELLATION_DATE, new org.apache.thrift.meta_data.FieldMetaData("cancellationDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COURSE_ID, new org.apache.thrift.meta_data.FieldMetaData("courseId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ENROLLMENT_DATE, new org.apache.thrift.meta_data.FieldMetaData("enrollmentDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThriftEnrollmentDto.class, metaDataMap);
  }

  public ThriftEnrollmentDto() {
  }

  public ThriftEnrollmentDto(
    long enrollmentId,
    java.lang.String userEmail,
    java.lang.String creditCardNumber,
    java.lang.String cancellationDate,
    long courseId,
    java.lang.String enrollmentDate)
  {
    this();
    this.enrollmentId = enrollmentId;
    setEnrollmentIdIsSet(true);
    this.userEmail = userEmail;
    this.creditCardNumber = creditCardNumber;
    this.cancellationDate = cancellationDate;
    this.courseId = courseId;
    setCourseIdIsSet(true);
    this.enrollmentDate = enrollmentDate;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThriftEnrollmentDto(ThriftEnrollmentDto other) {
    __isset_bitfield = other.__isset_bitfield;
    this.enrollmentId = other.enrollmentId;
    if (other.isSetUserEmail()) {
      this.userEmail = other.userEmail;
    }
    if (other.isSetCreditCardNumber()) {
      this.creditCardNumber = other.creditCardNumber;
    }
    if (other.isSetCancellationDate()) {
      this.cancellationDate = other.cancellationDate;
    }
    this.courseId = other.courseId;
    if (other.isSetEnrollmentDate()) {
      this.enrollmentDate = other.enrollmentDate;
    }
  }

  @Override
  public ThriftEnrollmentDto deepCopy() {
    return new ThriftEnrollmentDto(this);
  }

  @Override
  public void clear() {
    setEnrollmentIdIsSet(false);
    this.enrollmentId = 0;
    this.userEmail = null;
    this.creditCardNumber = null;
    this.cancellationDate = null;
    setCourseIdIsSet(false);
    this.courseId = 0;
    this.enrollmentDate = null;
  }

  public long getEnrollmentId() {
    return this.enrollmentId;
  }

  public ThriftEnrollmentDto setEnrollmentId(long enrollmentId) {
    this.enrollmentId = enrollmentId;
    setEnrollmentIdIsSet(true);
    return this;
  }

  public void unsetEnrollmentId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENROLLMENTID_ISSET_ID);
  }

  /** Returns true if field enrollmentId is set (has been assigned a value) and false otherwise */
  public boolean isSetEnrollmentId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENROLLMENTID_ISSET_ID);
  }

  public void setEnrollmentIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENROLLMENTID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUserEmail() {
    return this.userEmail;
  }

  public ThriftEnrollmentDto setUserEmail(@org.apache.thrift.annotation.Nullable java.lang.String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  public void unsetUserEmail() {
    this.userEmail = null;
  }

  /** Returns true if field userEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetUserEmail() {
    return this.userEmail != null;
  }

  public void setUserEmailIsSet(boolean value) {
    if (!value) {
      this.userEmail = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCreditCardNumber() {
    return this.creditCardNumber;
  }

  public ThriftEnrollmentDto setCreditCardNumber(@org.apache.thrift.annotation.Nullable java.lang.String creditCardNumber) {
    this.creditCardNumber = creditCardNumber;
    return this;
  }

  public void unsetCreditCardNumber() {
    this.creditCardNumber = null;
  }

  /** Returns true if field creditCardNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditCardNumber() {
    return this.creditCardNumber != null;
  }

  public void setCreditCardNumberIsSet(boolean value) {
    if (!value) {
      this.creditCardNumber = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCancellationDate() {
    return this.cancellationDate;
  }

  public ThriftEnrollmentDto setCancellationDate(@org.apache.thrift.annotation.Nullable java.lang.String cancellationDate) {
    this.cancellationDate = cancellationDate;
    return this;
  }

  public void unsetCancellationDate() {
    this.cancellationDate = null;
  }

  /** Returns true if field cancellationDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCancellationDate() {
    return this.cancellationDate != null;
  }

  public void setCancellationDateIsSet(boolean value) {
    if (!value) {
      this.cancellationDate = null;
    }
  }

  public long getCourseId() {
    return this.courseId;
  }

  public ThriftEnrollmentDto setCourseId(long courseId) {
    this.courseId = courseId;
    setCourseIdIsSet(true);
    return this;
  }

  public void unsetCourseId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COURSEID_ISSET_ID);
  }

  /** Returns true if field courseId is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COURSEID_ISSET_ID);
  }

  public void setCourseIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COURSEID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEnrollmentDate() {
    return this.enrollmentDate;
  }

  public ThriftEnrollmentDto setEnrollmentDate(@org.apache.thrift.annotation.Nullable java.lang.String enrollmentDate) {
    this.enrollmentDate = enrollmentDate;
    return this;
  }

  public void unsetEnrollmentDate() {
    this.enrollmentDate = null;
  }

  /** Returns true if field enrollmentDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEnrollmentDate() {
    return this.enrollmentDate != null;
  }

  public void setEnrollmentDateIsSet(boolean value) {
    if (!value) {
      this.enrollmentDate = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ENROLLMENT_ID:
      if (value == null) {
        unsetEnrollmentId();
      } else {
        setEnrollmentId((java.lang.Long)value);
      }
      break;

    case USER_EMAIL:
      if (value == null) {
        unsetUserEmail();
      } else {
        setUserEmail((java.lang.String)value);
      }
      break;

    case CREDIT_CARD_NUMBER:
      if (value == null) {
        unsetCreditCardNumber();
      } else {
        setCreditCardNumber((java.lang.String)value);
      }
      break;

    case CANCELLATION_DATE:
      if (value == null) {
        unsetCancellationDate();
      } else {
        setCancellationDate((java.lang.String)value);
      }
      break;

    case COURSE_ID:
      if (value == null) {
        unsetCourseId();
      } else {
        setCourseId((java.lang.Long)value);
      }
      break;

    case ENROLLMENT_DATE:
      if (value == null) {
        unsetEnrollmentDate();
      } else {
        setEnrollmentDate((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ENROLLMENT_ID:
      return getEnrollmentId();

    case USER_EMAIL:
      return getUserEmail();

    case CREDIT_CARD_NUMBER:
      return getCreditCardNumber();

    case CANCELLATION_DATE:
      return getCancellationDate();

    case COURSE_ID:
      return getCourseId();

    case ENROLLMENT_DATE:
      return getEnrollmentDate();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ENROLLMENT_ID:
      return isSetEnrollmentId();
    case USER_EMAIL:
      return isSetUserEmail();
    case CREDIT_CARD_NUMBER:
      return isSetCreditCardNumber();
    case CANCELLATION_DATE:
      return isSetCancellationDate();
    case COURSE_ID:
      return isSetCourseId();
    case ENROLLMENT_DATE:
      return isSetEnrollmentDate();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ThriftEnrollmentDto)
      return this.equals((ThriftEnrollmentDto)that);
    return false;
  }

  public boolean equals(ThriftEnrollmentDto that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_enrollmentId = true;
    boolean that_present_enrollmentId = true;
    if (this_present_enrollmentId || that_present_enrollmentId) {
      if (!(this_present_enrollmentId && that_present_enrollmentId))
        return false;
      if (this.enrollmentId != that.enrollmentId)
        return false;
    }

    boolean this_present_userEmail = true && this.isSetUserEmail();
    boolean that_present_userEmail = true && that.isSetUserEmail();
    if (this_present_userEmail || that_present_userEmail) {
      if (!(this_present_userEmail && that_present_userEmail))
        return false;
      if (!this.userEmail.equals(that.userEmail))
        return false;
    }

    boolean this_present_creditCardNumber = true && this.isSetCreditCardNumber();
    boolean that_present_creditCardNumber = true && that.isSetCreditCardNumber();
    if (this_present_creditCardNumber || that_present_creditCardNumber) {
      if (!(this_present_creditCardNumber && that_present_creditCardNumber))
        return false;
      if (!this.creditCardNumber.equals(that.creditCardNumber))
        return false;
    }

    boolean this_present_cancellationDate = true && this.isSetCancellationDate();
    boolean that_present_cancellationDate = true && that.isSetCancellationDate();
    if (this_present_cancellationDate || that_present_cancellationDate) {
      if (!(this_present_cancellationDate && that_present_cancellationDate))
        return false;
      if (!this.cancellationDate.equals(that.cancellationDate))
        return false;
    }

    boolean this_present_courseId = true;
    boolean that_present_courseId = true;
    if (this_present_courseId || that_present_courseId) {
      if (!(this_present_courseId && that_present_courseId))
        return false;
      if (this.courseId != that.courseId)
        return false;
    }

    boolean this_present_enrollmentDate = true && this.isSetEnrollmentDate();
    boolean that_present_enrollmentDate = true && that.isSetEnrollmentDate();
    if (this_present_enrollmentDate || that_present_enrollmentDate) {
      if (!(this_present_enrollmentDate && that_present_enrollmentDate))
        return false;
      if (!this.enrollmentDate.equals(that.enrollmentDate))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(enrollmentId);

    hashCode = hashCode * 8191 + ((isSetUserEmail()) ? 131071 : 524287);
    if (isSetUserEmail())
      hashCode = hashCode * 8191 + userEmail.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreditCardNumber()) ? 131071 : 524287);
    if (isSetCreditCardNumber())
      hashCode = hashCode * 8191 + creditCardNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetCancellationDate()) ? 131071 : 524287);
    if (isSetCancellationDate())
      hashCode = hashCode * 8191 + cancellationDate.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(courseId);

    hashCode = hashCode * 8191 + ((isSetEnrollmentDate()) ? 131071 : 524287);
    if (isSetEnrollmentDate())
      hashCode = hashCode * 8191 + enrollmentDate.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ThriftEnrollmentDto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetEnrollmentId(), other.isSetEnrollmentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnrollmentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enrollmentId, other.enrollmentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUserEmail(), other.isSetUserEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userEmail, other.userEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreditCardNumber(), other.isSetCreditCardNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditCardNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditCardNumber, other.creditCardNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCancellationDate(), other.isSetCancellationDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCancellationDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cancellationDate, other.cancellationDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCourseId(), other.isSetCourseId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseId, other.courseId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEnrollmentDate(), other.isSetEnrollmentDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnrollmentDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enrollmentDate, other.enrollmentDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ThriftEnrollmentDto(");
    boolean first = true;

    sb.append("enrollmentId:");
    sb.append(this.enrollmentId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userEmail:");
    if (this.userEmail == null) {
      sb.append("null");
    } else {
      sb.append(this.userEmail);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("creditCardNumber:");
    if (this.creditCardNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.creditCardNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cancellationDate:");
    if (this.cancellationDate == null) {
      sb.append("null");
    } else {
      sb.append(this.cancellationDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseId:");
    sb.append(this.courseId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("enrollmentDate:");
    if (this.enrollmentDate == null) {
      sb.append("null");
    } else {
      sb.append(this.enrollmentDate);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThriftEnrollmentDtoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ThriftEnrollmentDtoStandardScheme getScheme() {
      return new ThriftEnrollmentDtoStandardScheme();
    }
  }

  private static class ThriftEnrollmentDtoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThriftEnrollmentDto> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, ThriftEnrollmentDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ENROLLMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.enrollmentId = iprot.readI64();
              struct.setEnrollmentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userEmail = iprot.readString();
              struct.setUserEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREDIT_CARD_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.creditCardNumber = iprot.readString();
              struct.setCreditCardNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CANCELLATION_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cancellationDate = iprot.readString();
              struct.setCancellationDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // COURSE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.courseId = iprot.readI64();
              struct.setCourseIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ENROLLMENT_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.enrollmentDate = iprot.readString();
              struct.setEnrollmentDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, ThriftEnrollmentDto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ENROLLMENT_ID_FIELD_DESC);
      oprot.writeI64(struct.enrollmentId);
      oprot.writeFieldEnd();
      if (struct.userEmail != null) {
        oprot.writeFieldBegin(USER_EMAIL_FIELD_DESC);
        oprot.writeString(struct.userEmail);
        oprot.writeFieldEnd();
      }
      if (struct.creditCardNumber != null) {
        oprot.writeFieldBegin(CREDIT_CARD_NUMBER_FIELD_DESC);
        oprot.writeString(struct.creditCardNumber);
        oprot.writeFieldEnd();
      }
      if (struct.cancellationDate != null) {
        oprot.writeFieldBegin(CANCELLATION_DATE_FIELD_DESC);
        oprot.writeString(struct.cancellationDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COURSE_ID_FIELD_DESC);
      oprot.writeI64(struct.courseId);
      oprot.writeFieldEnd();
      if (struct.enrollmentDate != null) {
        oprot.writeFieldBegin(ENROLLMENT_DATE_FIELD_DESC);
        oprot.writeString(struct.enrollmentDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThriftEnrollmentDtoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ThriftEnrollmentDtoTupleScheme getScheme() {
      return new ThriftEnrollmentDtoTupleScheme();
    }
  }

  private static class ThriftEnrollmentDtoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThriftEnrollmentDto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThriftEnrollmentDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetEnrollmentId()) {
        optionals.set(0);
      }
      if (struct.isSetUserEmail()) {
        optionals.set(1);
      }
      if (struct.isSetCreditCardNumber()) {
        optionals.set(2);
      }
      if (struct.isSetCancellationDate()) {
        optionals.set(3);
      }
      if (struct.isSetCourseId()) {
        optionals.set(4);
      }
      if (struct.isSetEnrollmentDate()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetEnrollmentId()) {
        oprot.writeI64(struct.enrollmentId);
      }
      if (struct.isSetUserEmail()) {
        oprot.writeString(struct.userEmail);
      }
      if (struct.isSetCreditCardNumber()) {
        oprot.writeString(struct.creditCardNumber);
      }
      if (struct.isSetCancellationDate()) {
        oprot.writeString(struct.cancellationDate);
      }
      if (struct.isSetCourseId()) {
        oprot.writeI64(struct.courseId);
      }
      if (struct.isSetEnrollmentDate()) {
        oprot.writeString(struct.enrollmentDate);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThriftEnrollmentDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.enrollmentId = iprot.readI64();
        struct.setEnrollmentIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userEmail = iprot.readString();
        struct.setUserEmailIsSet(true);
      }
      if (incoming.get(2)) {
        struct.creditCardNumber = iprot.readString();
        struct.setCreditCardNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cancellationDate = iprot.readString();
        struct.setCancellationDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.courseId = iprot.readI64();
        struct.setCourseIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.enrollmentDate = iprot.readString();
        struct.setEnrollmentDateIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

